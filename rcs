-- Criação do Banco de Dados
CREATE DATABASE sistema_vendas;
USE sistema_vendas;

-- Criação das Tabelas

-- Tabela Clientes
CREATE TABLE Clientes (
    id_cliente INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL UNIQUE,
    telefone VARCHAR(15)
);

-- Tabela Produtos
CREATE TABLE Produtos (
    id_produto INT AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(100) NOT NULL,
    preco DECIMAL(10, 2) NOT NULL,
    quantidade_estoque INT NOT NULL
);

-- Tabela Vendas
CREATE TABLE Vendas (
    id_venda INT AUTO_INCREMENT PRIMARY KEY,
    id_cliente INT,
    id_produto INT,
    quantidade INT NOT NULL,
    data_venda DATE NOT NULL,
    FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente),
    FOREIGN KEY (id_produto) REFERENCES Produtos(id_produto)
);

-- Inserção de Dados

-- Inserindo clientes
INSERT INTO Clientes (nome, email, telefone) VALUES
('Ana Costa', 'ana.costa@example.com', '123456789'),
('Bruno Silva', 'bruno.silva@example.com', '987654321'),
('Carla Souza', 'carla.souza@example.com', '555666777');

-- Inserindo produtos
INSERT INTO Produtos (nome, preco, quantidade_estoque) VALUES
('Produto A', 29.99, 100),
('Produto B', 49.99, 200),
('Produto C', 19.99, 150);

-- Inserindo vendas
INSERT INTO Vendas (id_cliente, id_produto, quantidade, data_venda) VALUES
(1, 1, 3, '2024-09-01'),
(2, 1, 1, '2024-09-02'),
(1, 2, 2, '2024-09-03'),
(3, 3, 5, '2024-09-04'),
(2, 3, 1, '2024-09-05');

-- Consultas e Relatórios

-- 1. Mostre todas as vendas realizadas, incluindo o nome do cliente e o nome do produto.
SELECT v.id_venda, c.nome AS cliente, p.nome AS produto, v.quantidade, v.data_venda
FROM Vendas v
JOIN Clientes c ON v.id_cliente = c.id_cliente
JOIN Produtos p ON v.id_produto = p.id_produto;

-- 2. Mostre todas as compras realizadas por um cliente específico (por exemplo, id_cliente = 1).
SELECT v.id_venda, p.nome AS produto, v.quantidade, v.data_venda
FROM Vendas v
JOIN Produtos p ON v.id_produto = p.id_produto
WHERE v.id_cliente = 1;

-- 3. Exiba o total de vendas realizadas por produto.
SELECT p.nome AS produto, SUM(v.quantidade) AS total_vendas
FROM Vendas v
JOIN Produtos p ON v.id_produto = p.id_produto
GROUP BY p.nome;

-- Atualização e Deleção de Dados

-- 1. Atualize o estoque de um produto após uma venda (por exemplo, produto com id_produto = 1).
-- Atualiza o estoque subtraindo a quantidade total vendida do produto específico
UPDATE Produtos p
JOIN Vendas v ON p.id_produto = v.id_produto
SET p.quantidade_estoque = p.quantidade_estoque - v.quantidade
WHERE p.id_produto = 1;

-- 2. Atualize as informações de um cliente (por exemplo, id_cliente = 1).
UPDATE Clientes
SET telefone = '111222333'
WHERE id_cliente = 1;

-- 3. Delete uma venda e, se necessário, delete o cliente associado (por exemplo, id_venda = 5).
-- Excluindo a venda
DELETE FROM Vendas
WHERE id_venda = 5;

-- Opcionalmente, pode-se remover o cliente se não houver outras vendas associadas
DELETE FROM Clientes
WHERE id_cliente = (SELECT id_cliente FROM Vendas WHERE id_venda = 5)
  AND NOT EXISTS (SELECT 1 FROM Vendas WHERE id_cliente = Clientes.id_cliente);
